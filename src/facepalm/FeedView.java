/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facepalm;

import facepalm.fbservices.FBManager;
import facepalm.model.Feed;
import facepalm.model.User;
import facepalm.presenter.IPicturePresenter;
import facepalm.presenter.PicturePresenterImpl;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Stevie
 */
public class FeedView extends javax.swing.JPanel implements IPictureView {

    /**
     * Creates new form FeedView
     */
    public FeedView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _date = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16));
        jPanel1 = new javax.swing.JPanel();
        _avt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        _message = new javax.swing.JTextArea();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16));
        _commentPanel = new facepalm.CommentPanel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        _date.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        _date.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        _date.setText("...");
        add(_date);

        filler1.setAlignmentX(0.0F);
        add(filler1);

        jPanel1.setPreferredSize(new java.awt.Dimension(368, 100));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        _avt.setText("...");
        _avt.setMaximumSize(new java.awt.Dimension(72, 72));
        _avt.setMinimumSize(new java.awt.Dimension(72, 72));
        _avt.setPreferredSize(new java.awt.Dimension(72, 72));
        jPanel1.add(_avt);

        jScrollPane1.setMaximumSize(new java.awt.Dimension(32767, 100));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(166, 80));

        _message.setEditable(false);
        _message.setBackground(new java.awt.Color(204, 204, 204));
        _message.setColumns(20);
        _message.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        _message.setLineWrap(true);
        _message.setRows(4);
        _message.setWrapStyleWord(true);
        _message.setAutoscrolls(false);
        _message.setFocusable(false);
        _message.setMaximumSize(new java.awt.Dimension(2147483647, 100));
        jScrollPane1.setViewportView(_message);

        jPanel1.add(jScrollPane1);

        add(jPanel1);
        add(filler2);
        add(_commentPanel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _avt;
    private facepalm.CommentPanel _commentPanel;
    private javax.swing.JLabel _date;
    private javax.swing.JTextArea _message;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    public void setFeed(Feed f){
        _date.setText(f.getCreatedTime());
        _message.setText(f.getMessage());
        if (f.getComments() != null) {
            _commentPanel.setComments(f.getComments().comments);
        } else {
            _commentPanel.setVisible(false);
        }
//        Utils.loadImage(_avt, 
//                FBManager.getInstance().getCurrentUser().getPicture().getUrl());
        
        if (avtUrl == null){
            IPicturePresenter presenter = new PicturePresenterImpl(this);
            presenter.loadUserPicture(65, 65);
        } else {
            Utils.loadImage(_avt, avtUrl);
        }
    }

    private static String avtUrl = null;
    @Override
    public void updateView(User.PictureWrap picture) {
        avtUrl = picture.getUrl();
        URL url = null;
        try {
            url = new URL(picture.getUrl());


            BufferedImage image = ImageIO.read(url);
            System.out.println("Load image into frame...");

            Image img = image.getScaledInstance(_avt.getWidth(), _avt.getHeight(), Image.SCALE_SMOOTH);
            _avt.setIcon(new ImageIcon(img));

        } catch (MalformedURLException ex) {
            Logger.getLogger(FeedView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FeedView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
