/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facepalm;

import facepalm.fbservices.FBManager;
import facepalm.model.Feed;
import facepalm.model.Privacy;
import facepalm.model.User;
import facepalm.presenter.IPicturePresenter;
import facepalm.presenter.PicturePresenterImpl;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Stevie
 */
public class FeedView extends javax.swing.JPanel implements IPictureView {

    private static String avtUrl = null;

    /**
     * Creates new form FeedView
     */
    public FeedView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        _avt = new javax.swing.JLabel();
        _userNameLb = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        _date = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(16, 0), new java.awt.Dimension(16, 0), new java.awt.Dimension(16, 0));
        _privacyLb = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16), new java.awt.Dimension(0, 16));
        _msgLb = new javax.swing.JTextArea();
        _imgPicture = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 8), new java.awt.Dimension(0, 8), new java.awt.Dimension(0, 8));
        _commentPanel = new facepalm.CommentPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setAlignmentX(0.0F);
        jPanel2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(1000, 56));
        jPanel2.setMinimumSize(new java.awt.Dimension(160, 56));
        jPanel2.setPreferredSize(new java.awt.Dimension(160, 56));

        _avt.setBackground(new java.awt.Color(204, 204, 204));
        _avt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        _avt.setMaximumSize(new java.awt.Dimension(56, 56));
        _avt.setMinimumSize(new java.awt.Dimension(56, 56));
        _avt.setPreferredSize(new java.awt.Dimension(56, 56));

        _userNameLb.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        _userNameLb.setForeground(new java.awt.Color(54, 88, 153));
        _userNameLb.setText("User Name");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        _date.setForeground(new java.awt.Color(144, 148, 156));
        _date.setText("time");
        jPanel1.add(_date);
        jPanel1.add(filler1);

        _privacyLb.setForeground(new java.awt.Color(144, 148, 156));
        _privacyLb.setText("privacy");
        _privacyLb.setMaximumSize(new java.awt.Dimension(14, 14));
        _privacyLb.setMinimumSize(new java.awt.Dimension(14, 14));
        _privacyLb.setPreferredSize(new java.awt.Dimension(14, 14));
        jPanel1.add(_privacyLb);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(_avt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(_userNameLb)
                        .addGap(0, 262, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_avt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(_userNameLb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        _avt.getAccessibleContext().setAccessibleName("img");

        add(jPanel2);
        add(filler2);

        _msgLb.setEditable(false);
        _msgLb.setColumns(20);
        _msgLb.setLineWrap(true);
        _msgLb.setRows(5);
        _msgLb.setText("...");
        _msgLb.setWrapStyleWord(true);
        _msgLb.setAlignmentX(0.0F);
        _msgLb.setBorder(null);
        _msgLb.setMaximumSize(new java.awt.Dimension(1000, 120));
        _msgLb.setMinimumSize(new java.awt.Dimension(160, 14));
        _msgLb.setPreferredSize(new java.awt.Dimension(164, 80));
        add(_msgLb);
        add(_imgPicture);
        add(filler3);

        _commentPanel.setAlignmentX(0.0F);
        add(_commentPanel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _avt;
    private facepalm.CommentPanel _commentPanel;
    private javax.swing.JLabel _date;
    private javax.swing.JLabel _imgPicture;
    private javax.swing.JTextArea _msgLb;
    private javax.swing.JLabel _privacyLb;
    private javax.swing.JLabel _userNameLb;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
    
    public void setFeed(Feed f){
        if (f.getCreatedTime() != null )
            _date.setText(f.getCreatedTime());
        if (f.getMessage() != null )
            _msgLb.setText(f.getMessage());
        else
            _msgLb.setVisible(false);
        
        if (f.getFullPicture() != null){
             Utils.loadImage(_imgPicture, f.getFullPicture(), false);
        }
        else{
            _imgPicture.setVisible(false);
        }
        _userNameLb.setText(FBManager.getInstance().getCurrentUser().getName());
        try {
            setPrivacyIcon(f.getPrivacy().geteValue());
        } catch (IOException ex) {
            Logger.getLogger(FeedView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (f.getComments() != null && f.getComments().comments.size() != 0)
        {
            _commentPanel.setComments(f.getComments().comments);
        }
        else
        {
            _commentPanel.setVisible(false);
        }
//        _message.setText(f.getMessage());
//        if (f.getComments() != null) {
//            _commentPanel.setComments(f.getComments().comments);
//        } else {
//            _commentPanel.setVisible(false);
//        }
        
        Utils.loadImage(_avt, 
               FBManager.getInstance().getCurrentUser().getPicture().getUrl());
//        
//        if (avtUrl == null){
//            IPicturePresenter presenter = new PicturePresenterImpl(this);
//            presenter.loadUserPicture(65, 65);
//        } else {
//            Utils.loadImage(_avt, avtUrl);
//        }

    }

    @Override
    public void updateView(User.PictureWrap picture) {
        avtUrl = picture.getUrl();
        URL url = null;
        try {
            url = new URL(picture.getUrl());


            BufferedImage image = ImageIO.read(url);
            System.out.println("Load image into frame...");

            Image img = image.getScaledInstance(64, 64, Image.SCALE_SMOOTH);
            _avt.setIcon(new ImageIcon(img));

        } catch (MalformedURLException ex) {
            Logger.getLogger(FeedView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FeedView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setPrivacyIcon(Privacy.eType privacyType) throws IOException {
        String ic_name = ""; 
        switch (privacyType)
        {
            case SELF:
                ic_name = "ic_lock.png";
                break;
            case EVERYONE:
                ic_name = "ic_global.png";
                break;
            case ALL_FRIENDS:
                ic_name = "ic_person.png";
                break;
            case FRIENDS_OF_FRIENDS:
                ic_name = "ic_lock.png";
                break;
            case CUSTOM:
                ic_name = "ic_custom.png";
                break;
            default:
                ic_name =  "ic_global.png";
                break;
        }
       BufferedImage bufImg = ImageIO.read(getClass().getResource("/assets/" + ic_name));
       Image img = bufImg.getScaledInstance(
                            _privacyLb.getPreferredSize().width,
                            _privacyLb.getPreferredSize().height,
                            Image.SCALE_SMOOTH);
       _privacyLb.setIcon(new ImageIcon(img));

    }

    private String setTextHtml(String msg) {
        String[] msgs = msg.split("\n");
        String rt = "";
        for (int i = 0; i < msgs.length; i++) {
            rt += "<p>" + msgs[i] + "</p>";
        }
        return "<HTML>" + rt  + "</HTML>";
    }
}
